/*
 * generated by Xtext 2.27.0
 */
package org.xtext.example.qualificationdata.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.qualificationdata.ide.contentassist.antlr.internal.InternalMyParser;
import org.xtext.example.qualificationdata.services.MyGrammarAccess;

public class MyParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(MyGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, MyGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getQualificationAccess().getAlternatives(), "rule__Qualification__Alternatives");
			builder.put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
			builder.put(grammarAccess.getEDateAccess().getAlternatives(), "rule__EDate__Alternatives");
			builder.put(grammarAccess.getSerieTemporelleAccess().getGroup(), "rule__SerieTemporelle__Group__0");
			builder.put(grammarAccess.getSerieTemporelleAccess().getGroup_4(), "rule__SerieTemporelle__Group_4__0");
			builder.put(grammarAccess.getMesureAccess().getGroup(), "rule__Mesure__Group__0");
			builder.put(grammarAccess.getMesureAccess().getGroup_2(), "rule__Mesure__Group_2__0");
			builder.put(grammarAccess.getAutoQualificationAccess().getGroup(), "rule__AutoQualification__Group__0");
			builder.put(grammarAccess.getAutoQualificationAccess().getGroup_3(), "rule__AutoQualification__Group_3__0");
			builder.put(grammarAccess.getManuelleQualificationAccess().getGroup(), "rule__ManuelleQualification__Group__0");
			builder.put(grammarAccess.getEIntAccess().getGroup(), "rule__EInt__Group__0");
			builder.put(grammarAccess.getSerieTemporelleAccess().getIdAssignment_1(), "rule__SerieTemporelle__IdAssignment_1");
			builder.put(grammarAccess.getSerieTemporelleAccess().getMesureAssignment_3(), "rule__SerieTemporelle__MesureAssignment_3");
			builder.put(grammarAccess.getSerieTemporelleAccess().getMesureAssignment_4_1(), "rule__SerieTemporelle__MesureAssignment_4_1");
			builder.put(grammarAccess.getMesureAccess().getValeurAssignment_0(), "rule__Mesure__ValeurAssignment_0");
			builder.put(grammarAccess.getMesureAccess().getTimestampAssignment_1(), "rule__Mesure__TimestampAssignment_1");
			builder.put(grammarAccess.getMesureAccess().getQualificationAssignment_2_1(), "rule__Mesure__QualificationAssignment_2_1");
			builder.put(grammarAccess.getAutoQualificationAccess().getQualitycodeAssignment_2(), "rule__AutoQualification__QualitycodeAssignment_2");
			builder.put(grammarAccess.getAutoQualificationAccess().getAlgoAssignment_3_1(), "rule__AutoQualification__AlgoAssignment_3_1");
			builder.put(grammarAccess.getManuelleQualificationAccess().getQualitycodeAssignment_2(), "rule__ManuelleQualification__QualitycodeAssignment_2");
			builder.put(grammarAccess.getManuelleQualificationAccess().getCommentaireAssignment_3(), "rule__ManuelleQualification__CommentaireAssignment_3");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private MyGrammarAccess grammarAccess;

	@Override
	protected InternalMyParser createParser() {
		InternalMyParser result = new InternalMyParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public MyGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(MyGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
